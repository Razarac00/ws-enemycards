# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
name: WS-EnemyCards-$(date:yyyyMMdd)$(rev:.rr)

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 'build'
  condition: succeeded()
  displayName: 'build-ws'
  jobs:
  - job:
    condition: succeeded()
    displayName: 'install and build'
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
      displayName: 'Setup Gradle'

    - script: |
        ./gradlew clean build
      displayName: 'gradle clean and build'

- stage: 'test'
  condition: succeeded()
  displayName: 'test-ws'
  jobs:
  - job:
    condition: succeeded()
    displayName: 'test run'
    steps:
    - task: Gradle@2
      inputs:
        workingDirectory: ''
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build'
      displayName: 'Install gradle testing'

    - script: |
        ./gradlew test
      displayName: 'gradle install and test'